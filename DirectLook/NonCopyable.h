#pragma once

namespace DirectLook 
{
	
	/// \brief Die Klasse NonCopyable repraesentiert ein nicht kopierbares Objekt.
	class NonCopyable 
	{
	
	protected:
		////////////////////////////////////////////////////////////
		/// \brief Protected constructor
		////////////////////////////////////////////////////////////
		NonCopyable(void)
		{
		}
		
		////////////////////////////////////////////////////////////
		/// \brief Protected non-virtual destructor
		////////////////////////////////////////////////////////////
		~NonCopyable(void)
		{
		}

	private:
		////////////////////////////////////////////////////////////
		/// \brief Private copy constructor
		///
		/// \param copy
		///
		////////////////////////////////////////////////////////////
		NonCopyable( const NonCopyable& copy );

		////////////////////////////////////////////////////////////
		/// \brief Private = operator
		///
		/// \param copy
		///
		////////////////////////////////////////////////////////////
		NonCopyable& operator=( const NonCopyable& copy );
	};
};
